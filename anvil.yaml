dependencies: []
services: []
startup: {type: module, module: augment}
package_name: AnvilAugment
allow_embedding: false
name: AnvilAugment
runtime_options: {version: 2, server_version: python2-sandbox, client_version: '3'}
metadata: {}
startup_form: null
native_deps: {head_html: "<script>\n  function get_jQuery_obj(component) {\n     \
    \ // deal with buttons being the surrounding div rather than the button element\n\
    \      if (component.v._anvil.element[0].classList.contains(\"anvil-button\"))\
    \ {\n          return $(component.v._anvil.element[0].firstElementChild)\n   \
    \       // jQuery object\n      } else {\n          return component.v._anvil.element\n\
    \      }; //jQuery object\n  };\n\n  function augment(component, event) {\n  \
    \    const element = get_jQuery_obj(component);\n      component = component.v;\n\
    \      component._anvil.eventTypes[event] = {\n          'name': event\n     \
    \ };\n      element.on(event, function (e) {\n          const kwargs = [];\n \
    \         if (event.includes('key')) {\n              const e_args = {\n     \
    \             key: e.key,\n                  key_code: e.keyCode,\n          \
    \        shift_key: e.shiftKey,\n                  alt_key: e.altKey,\n      \
    \            meta_key: e.metaKey,\n                  ctrl_key: e.ctrlKey,\n  \
    \            };\n              Sk.abstr.mappingUnpackIntoKeywordArray(kwargs,\
    \ Sk.ffi.remapToPy(e_args));\n          }\n\n          preventDefault = Sk.abstr.gattr(component,\
    \ Sk.builtin.str('raise_event')).tp$call([Sk.builtin.str(event)], kwargs);\n \
    \         if (preventDefault !== undefined && preventDefault.v) {\n          \
    \    // just incase you want to prevent default behaviour return a value from\
    \ your event handler function\n              e.preventDefault();\n          }\n\
    \      });\n\n      component.constructor.trigger = new Sk.builtin.func(function\
    \ (self, event) {\n          event = event.$jsstr();\n          element.trigger(event);\n\
    \      });\n  }\n  \n</script>"}
dependency_order: []
dependency_code: {}
renamed: true
